# roles/customization/tasks/main.yaml

### CUSTOMIZATION ###
---
- name: Install common software
  become: true
  ansible.builtin.package:
    update-cache: true
    name: '{{ item }}'
    state: present
  with_items:
    - git
    - zsh
    - mc
    - ncdu

- name: Create config/mc directory if it does not exist
  ansible.builtin.file:
    path: /home/pi/.config/mc/
    state: directory
    owner: '{{ user }}'
    group: '{{ user }}'
    mode: 0700

- name: Golden Midnight Commander panels
  ansible.builtin.template:
    src: panels.ini
    dest: /home/pi/.config/mc/panels.ini
    owner: '{{ user }}'
    group: '{{ user }}'
    mode: 0644

- name: Golden Midnight Commander ini file
  ansible.builtin.template:
    src: ini
    dest: /home/pi/.config/mc/ini
    owner: '{{ user }}'
    group: '{{ user }}'
    mode: 0644

- name: Creates repos directory
  ansible.builtin.file:
    path: /home/pi/repos
    state: directory
    owner: '{{ user }}'
    group: '{{ user }}'
    mode: 0755

- name: Check if oh-my-zsh exists
  ansible.builtin.stat:
    path: '/home/{{ user }}/.oh-my-zsh'
  register: ohmyzsh_result

- name: Git clone oh my zsh
  ansible.builtin.git:
    repo: 'https://github.com/robbyrussell/oh-my-zsh.git'
    dest: '/home/{{ user }}/.oh-my-zsh'
    version: master
  become_user: '{{ user }}'
  when: not ohmyzsh_result.stat.exists

- name: Set permissions of oh-my-zsh for users
  ansible.builtin.file:
    path: '/home/{{ user }}/.oh-my-zsh'
    # Prevent the cloned repository from having insecure permissions. Failing to do
    # so causes compinit() calls to fail with "command not found: compdef" errors
    # for users with insecure umasks (e.g., "002", allowing group writability).
    mode: 'go-w'
    recurse: true

- name: Golden .zshrc
  ansible.builtin.template:
    src: .zshrc
    dest: '/home/{{ user }}/.zshrc'
    owner: '{{ user }}'
    group: '{{ user }}'
    mode: 0644

- name: Golden theme for oh my zsh - racotencnic
  become: true
  ansible.builtin.template:
    src: racotecnic.zsh-theme
    dest: '/home/{{ user }}/.oh-my-zsh/themes/racotecnic.zsh-theme'
    owner: '{{ user }}'
    mode: 0644

- name: 'Set zsh default shell for {{ user }} user'
  ansible.builtin.user:
    name: '{{ user }}'
    shell: /bin/zsh

- name: Restart SSH service
  ansible.builtin.service:
    name: sshd
    state: restarted

- name: Disable Password Authentication
  ansible.builtin.lineinfile:
    dest=/etc/ssh/sshd_config
    regexp='^PasswordAuthentication'
    line="PasswordAuthentication no"
    state=present
    backup=yes
  notify:
    - Restart system
    - Restart system
