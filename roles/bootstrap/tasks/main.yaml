# roles/bootstrap/tasks/main.yaml

### BOOTSTRAP ###
---
- name: Apt get update
  ansible.builtin.apt:
    update-cache: true

- name: Set hostname
  ansible.builtin.hostname:
    name: "{{ inventory_hostname }}"

# TODO revise below as throwing error 20200208 - looked again 20200807
# Nice to have a check, this is checking host file not o the pi
#  when: not inventory_hostname | match ('(\d{1,3}\.){3}\d{1,3}')
#  when: not inventory_hostname | regex('(\d{1,3}\.){3}\d{1,3}')

  # IF NOT SET UPDATE HOSTNAME IN /etc/hosts/
  # Needs gather facts true
- name: Ensure hostname is in /etc/hosts
  ansible.builtin.lineinfile:
    dest: /etc/hosts
    regexp: "^{{ ansible_default_ipv4.address }}.+$"
    line: "{{ ansible_default_ipv4.address }} {{ ansible_fqdn }} {{ ansible_hostname }}"
  register: task_result

- name: Set timezone
  community.general.timezone:
    name: '{{ var_timezone }}'

- name: Set Timezone
  ansible.builtin.command: timedatectl set-timezone {{ var_timezone }}

- name: Enable NTP-SYNC
  ansible.builtin.command: timedatectl set-ntp true
  changed_when: false

- name: Debug to show value for local variable
  ansible.builtin.debug:
    msg: '{{ var_local }}'

# Not working in Vagrant test run so will skip and also skip for non arm architecture
- name: Change locale
  ansible.builtin.command: "raspi-config nonint do_change_locale {{ var_local }}"
  become: true
  when:
    - user == 'pi'
    - ansible_architecture != 'x86_64'
  changed_when: false

# # # # for wlan and not eth, need to set to eth connection and handle if none? currently setting in router
# - name: Set Static IP
#   ansible.builtin.blockinfile:
#     path: /etc/dhcpcd.conf
#     marker: "\n## {mark} added by ansible bootstrap"
#     insertafter: "fallback static_eth0"
#     block: |
#       interface wlan0
#       static ip_address={{ static_ip_and_mask }}
#       static routers={{ static_router }}
#       static domain_name_servers={{ static_dns }}
#   failed_when: false

- name: Change user's password
  ansible.builtin.user:
    name: pi
    password: "{{ new_password | password_hash('sha512') }}"
