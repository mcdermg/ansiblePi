# roles/bootstrap/tasks/main.yml

### BOOTSTRAP ###
---
  # UPDATE APT
#- name: apt-get update
#  apt:
#    update-cache: yes

  # CHECK IF HOSTNAME IS SET
- name: Set hostname
  hostname:
    name: "{{ inventory_hostname }}"
# TODO revise below as throwing error 20200208 - looked again 20200807
# Nice to have a check, this is checking host file not o the pi
#  when: not inventory_hostname | match ('(\d{1,3}\.){3}\d{1,3}')
#  when: not inventory_hostname | regex('(\d{1,3}\.){3}\d{1,3}')

  # IF NOT SET UPDATE HOSTNAME IN /etc/hosts/
  # Needs gather facts true
- name: Ensure hostname is in /etc/hosts
  lineinfile:
    dest=/etc/hosts
    regexp="^{{ ansible_default_ipv4.address }}.+$"
    line="{{ ansible_default_ipv4.address }} {{ ansible_fqdn }} {{ ansible_hostname }}"

  # SET TIMEZONE
- name: Set Timezone
  command: timedatectl set-timezone {{var_timezone}}

  # ENABLE NTP-SYNC
- name: NTP-SYNC
  command: timedatectl set-ntp true

# LOCALES FILE
# This might be breaking apt, locales seem wrong and had to manulally set to GB UTF8 UTF8
- name: Replace locale.gen file
  template:
    src: ../../../templates/locale.gen
    dest: /etc/locale.gen
    owner: root
    group: root
    mode: 0644
    backup: yes
  register: localgenUpdated

  # RUN LOCAL GEN
- name: Run locale-gen
  command: locale-gen
  become: yes
  when: localgenUpdated.stat.exists == False

  # REMOVE TEXT FROM /ETC/DEFAULT/LOCALE
- name: Remove text from /etc/default/locale
  replace:
    path: /etc/default/locale
    regexp: 'LANG=en_GB.UTF-8'
    replace: ''
    backup: no

  # UPDATE /ETC/DEFAULT/LOCALE
- name: Update /etc/default/locale
  blockinfile:
    path: /etc/default/locale
    marker: "## {mark} added by ansible bootstrap"
    insertafter: "File generated by update-locale"
    block: |
      LANG=es_AR.UTF-8 UTF-8
      LC_MESSAGES=en_GB.UTF-8

  # SET STATIC IP
- name: Set Static IP
  blockinfile:
    path: /etc/dhcpcd.conf
    marker: "\n## {mark} added by ansible bootstrap"
    insertafter: "fallback static_eth0"
    block: |
      interface wlan0
      static ip_address={{static_ip_and_mask}}
      static routers={{static_router}}
      static domain_name_servers={{static_dns}}

  # ENABLE VNC
- name: Enable VNC Server
  command: raspi-config nonint do_vnc 0
  become: yes
  when: inventory_hostname in groups['four']

  # START VNC SERVICE
- name: Start VNC service
  service:
    name: vncserver-x11-serviced
    state: started
  when: inventory_hostname in groups['four']

  # CHANGE DEFAULT PASSWORD
- name: change user's password
  user:
    name: pi
    password: "{{new_password | password_hash('sha512') }}"

# REBOOT IF CHANGE
- name: Reboot
  reboot:
    pre_reboot_delay: 3
    msg: "Reboot - initiated by Ansible"
    test_command: uptime

# # WAIT FOR REBOOT AND RECONNECTION
# # TODO alter to newer reboot module
# - name: Wait for the reboot to complete if there was a change.
#   wait_for_connection:
#     connect_timeout: 10
#     sleep: 5
#     delay: 5
#     timeout: 120
#   when: task_result is changed
